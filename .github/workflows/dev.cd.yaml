# CI가 끝나야지만 실행되어야 함
name: Development CD workflow

on:
  workflow_run:
    workflows: ['Development CI workflow']
    types:
      - completed

jobs:
  deploy:
    if: github.event.workflow_run.conclusion == 'success'
    runs-on: self-hosted
    permissions:
      packages: read
      contents: write

    steps:
      - name: Login to DockerHub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull Docker Image
        run: sudo docker pull ${{ secrets.DOCKER_USERNAME }}/wathing-api-dev:latest

      - name: Stop Previous Container
        run: |
          if [ "$(sudo docker ps -q -f name=wathing-api-dev)" ]; then
            sudo docker stop wathing-api-dev
          fi
        continue-on-error: true

      - name: Remove Previous Container
        run: |
          if [ "$(sudo docker ps -q -a -f name=wathing-api-dev)" ]; then
            sudo docker rm wathing-api-dev
          fi
        continue-on-error: true

      - name: Run Docker Container
        run: |
          sudo docker run -d \
            -p 3000:3000 \
            --network wathing-net \
            --name wathing-api-dev \
            -e HOST=${{ secrets.DEV_SERVER_URL }} \
            -e PORT=${{ secrets.DEV_PORT }} \
            -e DEBUG=true \
            -e DATABASE_URL=${{ secrets.DEV_DATABASE_URL }} \
            -e JWT_SECRET=${{ secrets.DEV_JWT_SECRET }} \
            -e JWT_EXPIRES_IN=${{ secrets.DEV_JWT_EXPIRES_IN }} \
            -e JWT_REFRESH_SECRET=${{ secrets.DEV_JWT_REFRESH_SECRET }} \
            -e JWT_REFRESH_EXPIRES_IN=${{ secrets.DEV_JWT_REFRESH_EXPIRES_IN }} \
            -e AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }} \
            -e AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }} \
            -e AWS_REGION=${{ secrets.AWS_REGION }} \
            -e S3_BUCKET_NAME=${{ secrets.DEV_S3_BUCKET_NAME }} \
            -e CDN_DOMAIN=${{ secrets.DEV_CDN_DOMAIN }} \
            -e SALT_ROUNDS=${{ secrets.DEV_SALT_ROUNDS }} \
            -e FIREBASE_SERVICE_ACCOUNT_KEY='${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}' \
            ${{ secrets.DOCKER_USERNAME }}/wathing-api-dev:latest

      - name: Delete Dangling Images
        run: |
          dangling_images=$(sudo docker images -q -f "dangling=true")

          if [ -n "$dangling_images" ]; then
            sudo docker rmi $dangling_images
          else
            echo "붕뜬 상태의 이미지가 없습니다."
          fi
